import org.gradle.api.tasks.compile.JavaCompile

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.gradle_version = "7.2.2"
    ext.kotlin_version = "1.7.10"
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven {
            url 'https://jitpack.io'
            allowInsecureProtocol = true
        }
        maven {
            url 'https://maven.aliyun.com/repository/central'
            allowInsecureProtocol = true
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
            allowInsecureProtocol = true
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
            allowInsecureProtocol = true
        }
        maven {
            url 'http://depot.sankuai.com/nexus/content/groups/public/'
            allowInsecureProtocol = true

        }
        //内网 pixel仓库 （代理了更多外网资源）
        maven {
            url "http://pixel.sankuai.com/repository/mtdp"
            allowInsecureProtocol = true
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {

    repositories {
        //本地资源
        mavenLocal()
        // 阿里云国内镜像地址
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
            allowInsecureProtocol = true
        }
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
            allowInsecureProtocol = true
        }
        maven {
            url 'http://depot.sankuai.com/nexus/content/groups/public/'
            allowInsecureProtocol = true
        }
        //内网 pixel仓库 （代理了更多外网资源）
        maven {
            url "http://pixel.sankuai.com/repository/mtdp"
            allowInsecureProtocol = true
        }
    }

    tasks.withType(JavaCompile) { options.encoding = "UTF-8" }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

project.tasks.each {
    it.each {
        println("task is : " + it.name)
    }
}